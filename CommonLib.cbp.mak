#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.1                         #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/liblibCommonLib.a

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/liblibCommonLib.a

INC_DEBUG_64 = $(INC)
CFLAGS_DEBUG_64 = $(CFLAGS) -march=core2 -g
RESINC_DEBUG_64 = $(RESINC)
RCFLAGS_DEBUG_64 = $(RCFLAGS)
LIBDIR_DEBUG_64 = $(LIBDIR)
LIB_DEBUG_64 = $(LIB)
LDFLAGS_DEBUG_64 = $(LDFLAGS)
OBJDIR_DEBUG_64 = obj/Debug
DEP_DEBUG_64 = 
OUT_DEBUG_64 = bin/Debug-64/liblibCommonLib.a

OBJ_DEBUG = $(OBJDIR_DEBUG)/Archivable.o $(OBJDIR_DEBUG)/NVThing.o $(OBJDIR_DEBUG)/StringUtils.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/Archivable.o $(OBJDIR_RELEASE)/NVThing.o $(OBJDIR_RELEASE)/StringUtils.o

OBJ_DEBUG_64 = $(OBJDIR_DEBUG_64)/Archivable.o $(OBJDIR_DEBUG_64)/NVThing.o $(OBJDIR_DEBUG_64)/StringUtils.o

all: debug release debug_64

clean: clean_debug clean_release clean_debug_64

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)

$(OBJDIR_DEBUG)/Archivable.o: Archivable.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Archivable.cpp -o $(OBJDIR_DEBUG)/Archivable.o

$(OBJDIR_DEBUG)/NVThing.o: NVThing.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c NVThing.cpp -o $(OBJDIR_DEBUG)/NVThing.o

$(OBJDIR_DEBUG)/StringUtils.o: StringUtils.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c StringUtils.cpp -o $(OBJDIR_DEBUG)/StringUtils.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/Archivable.o: Archivable.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Archivable.cpp -o $(OBJDIR_RELEASE)/Archivable.o

$(OBJDIR_RELEASE)/NVThing.o: NVThing.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c NVThing.cpp -o $(OBJDIR_RELEASE)/NVThing.o

$(OBJDIR_RELEASE)/StringUtils.o: StringUtils.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c StringUtils.cpp -o $(OBJDIR_RELEASE)/StringUtils.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

before_debug_64: 
	test -d bin/Debug-64 || mkdir -p bin/Debug-64
	test -d $(OBJDIR_DEBUG_64) || mkdir -p $(OBJDIR_DEBUG_64)

after_debug_64: 

debug_64: before_debug_64 out_debug_64 after_debug_64

out_debug_64: before_debug_64 $(OBJ_DEBUG_64) $(DEP_DEBUG_64)
	$(AR) rcs $(OUT_DEBUG_64) $(OBJ_DEBUG_64)

$(OBJDIR_DEBUG_64)/Archivable.o: Archivable.cpp
	$(CXX) $(CFLAGS_DEBUG_64) $(INC_DEBUG_64) -c Archivable.cpp -o $(OBJDIR_DEBUG_64)/Archivable.o

$(OBJDIR_DEBUG_64)/NVThing.o: NVThing.cpp
	$(CXX) $(CFLAGS_DEBUG_64) $(INC_DEBUG_64) -c NVThing.cpp -o $(OBJDIR_DEBUG_64)/NVThing.o

$(OBJDIR_DEBUG_64)/StringUtils.o: StringUtils.cpp
	$(CXX) $(CFLAGS_DEBUG_64) $(INC_DEBUG_64) -c StringUtils.cpp -o $(OBJDIR_DEBUG_64)/StringUtils.o

clean_debug_64: 
	rm -f $(OBJ_DEBUG_64) $(OUT_DEBUG_64)
	rm -rf bin/Debug-64
	rm -rf $(OBJDIR_DEBUG_64)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release before_debug_64 after_debug_64 clean_debug_64

